name: Build and Push Docker Images

on:
  push:
    branches:
      - main
jobs:
  unit_test_node:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        service:
          - frontend
          - worker
    defaults:
      run:
        working-directory: microservices/${{ matrix.service }}
    name: Node ${{ matrix.service }} unit test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
      - run: npm ci
      - run: yarn install
      - run: yarn test

  unit_test_python:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        service:
          - backend
    defaults:
      run:
        working-directory: microservices/backend
    name: Python ${{ matrix.service }} unit test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
      - name: Run tests
        run: | 
           python -m unittest -v

  tagging_repo: 
    runs-on: ubuntu-latest
    needs: [unit_test_python, unit_test_node]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'        
      - name: Minor version for each merge
        id: taggerDryRun
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WITH_V: 'true'
          DRY_RUN: 'true'

      - name: echo new tag
        run: |
          echo "The next tag version will be: ${{ steps.taggerDryRun.outputs.new_tag }}"
      - name: echo tag
        run: |
          echo "The current tag is: ${{ steps.taggerDryRun.outputs.tag }}"
      - name: echo part
        run: |
          echo "The version increment was: ${{ steps.taggerDryRun.outputs.part }}"     

      - name: Minor version for each merge
        id: taggerFinal
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WITH_V: 'true'

  security_img_scan:
    runs-on: ubuntu-latest
    needs: [tagging_repo]
    strategy:
      matrix:
        service:
          - frontend
          - backend
          - worker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build images 
        run: |
          docker build -t docker.io/${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ github.sha }} -f microservices/${{ matrix.service }}/Dockerfile .
      
      - name: Security scan
        uses: docker://aquasec/trivy:0.19.2
        with:
          args: --exit-code 1 --severity HIGH,CRITICAL docker.io/${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          #severity: 'CRITICAL,HIGH'
        continue-on-error: true  

  build_and_push:
    needs: security_img_scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - frontend
          - backend
          - worker
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta
        id: metalatest
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ matrix.service }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Docker meta
        id: metasha
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ matrix.service }}
          tags: |
            type=sha,prefix=v-{{sha}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        id: docker_login
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.service }} image main
        uses: docker/build-push-action@v5
        id: docker_build
        with:
          context: .
          file: ./microservices/${{ matrix.service }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ steps.meta.outputs.metalatest }}

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v5
        id: docker_build
        with:
          context: .
          file: ./microservices/${{ matrix.service }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ steps.meta.outputs.metasha }}

      - name: Use output version
        id: output-version
        run: echo ${{ steps.meta.outputs.metasha }}            